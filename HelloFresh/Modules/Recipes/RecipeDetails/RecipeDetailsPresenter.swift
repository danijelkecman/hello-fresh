//
//  RecipeDetailsPresenter.swift
//  HelloFresh
//
//  Created by Danijel Kecman on 9/17/17.
//  Copyright (c) 2017 Danijel Kecman. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class RecipeDetailsPresenter {
  
  // MARK: - Private properties -
  
  fileprivate weak var _view: RecipeDetailsViewInterface?
  fileprivate var _interactor: RecipeDetailsInteractorInterface
  fileprivate var _wireframe: RecipeDetailsWireframeInterface
  
  fileprivate var _service: HelloFreshService!
  fileprivate var _recipe: Recipe!
  
  // MARK: - Lifecycle -
  
  init(wireframe: RecipeDetailsWireframeInterface,
       view: RecipeDetailsViewInterface,
       interactor: RecipeDetailsInteractorInterface,
       recipeId: String) {
    _wireframe = wireframe
    _view = view
    _interactor = interactor
    
    // injected otherwise
    _service = HelloFreshService(helloFreshPersistence: HelloFreshDataStore())
    _service.fetchRecipe(recipeId) { recipe in
      self._recipe = recipe
    }
  }
  
  func viewDidLoad() {
    log.info(_recipe ?? "")
  }
}

// MARK: - Extensions -

extension RecipeDetailsPresenter: RecipeDetailsPresenterInterface {
  
  func didChangeRatingFor(with rating: Float) {
    _recipe.rating = Float(rating)
    _service.updateRecipe(_recipe) {
      log.info("updated rating")
    }
  }
  func updateRecipe(with recipe: Recipe) {
    _service.updateRecipe(recipe) {
      self._recipe = recipe
    }
  }
  
  func getRecipe() -> Recipe {
    return _recipe
  }
}

