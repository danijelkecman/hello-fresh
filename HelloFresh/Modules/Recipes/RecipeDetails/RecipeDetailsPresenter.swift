//
//  RecipeDetailsPresenter.swift
//  HelloFresh
//
//  Created by Danijel Kecman on 9/17/17.
//  Copyright (c) 2017 Danijel Kecman. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class RecipeDetailsPresenter {

    // MARK: - Private properties -

    fileprivate weak var _view: RecipeDetailsViewInterface?
    fileprivate var _interactor: RecipeDetailsInteractorInterface
    fileprivate var _wireframe: RecipeDetailsWireframeInterface
    
    fileprivate var _service: HelloFreshService!
    fileprivate var _recipeDto: RecipeDto!

    // MARK: - Lifecycle -

    init(wireframe: RecipeDetailsWireframeInterface,
         view: RecipeDetailsViewInterface,
         interactor: RecipeDetailsInteractorInterface,
         recipeDto: RecipeDto) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
        
        // injected otherwise
        _service = HelloFreshService(helloFreshPersistence: HelloFreshDataStore())
        _recipeDto = recipeDto
    }
    
    func viewDidLoad() {
        log.info(_recipeDto)
    }
}

// MARK: - Extensions -

extension RecipeDetailsPresenter: RecipeDetailsPresenterInterface {
    
    func didChangeRatingFor(with rating: Int) {
        _recipeDto.rating = rating
        _service.updateRecipe(Recipe.createRecipeFrom(recipeDto: _recipeDto)) {
            log.info("updated rating")
        }
    }
    func updateRecipe(with recipeDto: RecipeDto) {
        _service.updateRecipe(Recipe.createRecipeFrom(recipeDto: recipeDto)) {
            self._recipeDto = recipeDto
        }
    }
    
    func getRecipeDto() -> RecipeDto {
        return _recipeDto
    }
}
